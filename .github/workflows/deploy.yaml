name: Build, Push, and Deploy Multi-Service Docker Images

on:
  push:
    tags:
      - 'v*'

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push Docker images
        run: |
          cd DAPM
          services=$(yq e '.services | keys | .[]' docker-compose.yaml)
          
          for service in $services; do
            dockerfile_path=$(yq e ".services.$service.build.dockerfile" docker-compose.yaml)
            
            if [ "$dockerfile_path" = "null" ]; then
              dockerfile_path="Dockerfile"
            fi
            
            build_context=$(yq e ".services.$service.build.context" docker-compose.yaml)
            
            if [ "$build_context" = "null" ]; then
              build_context="."
            fi
            
            echo "Building $service using $dockerfile_path in context $build_context"
            
            docker build -t maximerochat/$service:latest -t maximerochat/$service:${{ github.ref_name }} -f $build_context/$dockerfile_path $build_context
            docker push maximerochat/$service:latest
            docker push maximerochat/$service:${{ github.ref_name }}
          done

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Install OpenVPN
        run: sudo apt-get update && sudo apt-get install -y openvpn

      - name: Configure OpenVPN
        env:
          OVPN_FILE: ${{ secrets.OPENVPN_CONFIG }}
        run: |
          echo "${{ secrets.OPENVPN_CA }}" > ca.crt
          echo "${{ secrets.OPENVPN_CERT }}" > client.crt
          echo "${{ secrets.OPENVPN_KEY }}" > client.key
          echo "${{ secrets.OPENVPN_TLS_KEY }}" > ta.key
          echo "${{ secrets.OPENVPN_USERPASS }}" > auth.txt

          echo '
          client
          dev tun
          proto udp
          remote openvpn.compute.dtu.dk 1194
          resolv-retry infinite
          nobind
          persist-key
          persist-tun
          ca ca.crt
          cert client.crt
          key client.key
          tls-auth ta.key 1
          remote-cert-tls server
          cipher AES-256-GCM
          auth-user-pass auth.txt
          auth-nocache
          reneg-sec 21600
          verb 3
          ' > openvpn.conf

          sudo openvpn --config openvpn.conf --daemon
          sleep 10  # Wait for VPN connection to establish
        
      - name: Deploy to remote server
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            cd ~/home/backend
            docker compose down  # Stop all services
            git pull  # Pull the latest changes
            docker compose up -d  # Start services in detached mode
