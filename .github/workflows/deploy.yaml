name: Build, Push, and Deploy Multi-Service Docker Images

on:
  push:
    tags:
      - 'v*'

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push Docker images
        run: |
          services=(
            "dapm.clientapi"
            "dapm.peerapi"
            "dapm.repositoryms.api"
            "dapm.resourceregistryms.api"
            "dapm.pipelineorchestratorms.api"
            "dapm.orchestrator"
            "dapm.operatorMS.api"
          )
          
          for service in "${services[@]}"; do
            lowercase_service=$(echo $service | tr '[:upper:]' '[:lower:]')
            docker build -t maximerochat/$lowercase_service:latest -t maximerochat/$lowercase_service:${{ github.ref_name }} -f ${service//./_}/Dockerfile .
            docker push maximerochat/$lowercase_service:latest
            docker push maximerochat/$lowercase_service:${{ github.ref_name }}
          done

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Install OpenVPN
        run: sudo apt-get update && sudo apt-get install -y openvpn

      - name: Configure OpenVPN
        env:
          OVPN_FILE: ${{ secrets.OPENVPN_CONFIG }}
        run: |
          echo "${{ secrets.OPENVPN_CA }}" > ca.crt
          echo "${{ secrets.OPENVPN_CERT }}" > client.crt
          echo "${{ secrets.OPENVPN_KEY }}" > client.key
          echo "${{ secrets.OPENVPN_TLS_KEY }}" > ta.key
          echo "${{ secrets.OPENVPN_USERPASS }}" > auth.txt

          echo '
          client
          dev tun
          proto udp
          remote openvpn.compute.dtu.dk 1194
          resolv-retry infinite
          nobind
          persist-key
          persist-tun
          ca ca.crt
          cert client.crt
          key client.key
          tls-auth ta.key 1
          remote-cert-tls server
          cipher AES-256-GCM
          auth-user-pass auth.txt
          auth-nocache
          reneg-sec 21600
          verb 3
          ' > openvpn.conf

          sudo openvpn --config openvpn.conf --daemon
          sleep 10  # Wait for VPN connection to establish
        
      - name: Deploy to remote server
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            docker-compose pull
            docker-compose up -d
